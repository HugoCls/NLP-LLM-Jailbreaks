Done logging!
Beginning TAP!
====================================
Tree-depth is: 1
====================================
Entering branch number 0
	Querying attacker with 1 prompts
<class 'openai.error.AuthenticationError'> No API key provided. You can set your API key in code using 'openai.api_key = <API-KEY>', or you can set the environment variable OPENAI_API_KEY=<API-KEY>). If your API key is stored in a file, you can point the openai module at it with 'openai.api_key_path = <PATH>'. You can generate API keys in the OpenAI web interface. See https://platform.openai.com/account/api-keys for details.
Traceback (most recent call last):
  File "C:\Users\strel\OneDrive\Desktop\Politehnica_Bucharest\1st year\Semester 2\Projet NLP\TAP\language_models.py", line 225, in generate
    response = openai.ChatCompletion.create(
  File "C:\Users\strel\anaconda3\lib\site-packages\openai\api_resources\chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
  File "C:\Users\strel\anaconda3\lib\site-packages\openai\api_resources\abstract\engine_api_resource.py", line 149, in create
    ) = cls.__prepare_create_request(
  File "C:\Users\strel\anaconda3\lib\site-packages\openai\api_resources\abstract\engine_api_resource.py", line 106, in __prepare_create_request
    requestor = api_requestor.APIRequestor(
  File "C:\Users\strel\anaconda3\lib\site-packages\openai\api_requestor.py", line 138, in __init__
    self.api_key = key or util.default_api_key()
  File "C:\Users\strel\anaconda3\lib\site-packages\openai\util.py", line 186, in default_api_key
    raise openai.error.AuthenticationError(
openai.error.AuthenticationError: No API key provided. You can set your API key in code using 'openai.api_key = <API-KEY>', or you can set the environment variable OPENAI_API_KEY=<API-KEY>). If your API key is stored in a file, you can point the openai module at it with 'openai.api_key_path = <PATH>'. You can generate API keys in the OpenAI web interface. See https://platform.openai.com/account/api-keys for details.
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
  File "C:\Users\strel\OneDrive\Desktop\Politehnica_Bucharest\1st year\Semester 2\Projet NLP\TAP\main_TAP.py", line 412, in <module>
    main(args)
  File "C:\Users\strel\OneDrive\Desktop\Politehnica_Bucharest\1st year\Semester 2\Projet NLP\TAP\main_TAP.py", line 147, in main
    attack_llm.get_attack(convs_list_copy, processed_response_list)
  File "C:\Users\strel\OneDrive\Desktop\Politehnica_Bucharest\1st year\Semester 2\Projet NLP\TAP\conversers.py", line 114, in get_attack
    self.model.batched_generate(full_prompts_subset[left:right],
  File "C:\Users\strel\OneDrive\Desktop\Politehnica_Bucharest\1st year\Semester 2\Projet NLP\TAP\language_models.py", line 247, in batched_generate
    return [self.generate(conv, max_n_tokens, temperature, top_p) for conv in convs_list]
  File "C:\Users\strel\OneDrive\Desktop\Politehnica_Bucharest\1st year\Semester 2\Projet NLP\TAP\language_models.py", line 247, in <listcomp>
    return [self.generate(conv, max_n_tokens, temperature, top_p) for conv in convs_list]
  File "C:\Users\strel\OneDrive\Desktop\Politehnica_Bucharest\1st year\Semester 2\Projet NLP\TAP\language_models.py", line 237, in generate
    time.sleep(self.API_RETRY_SLEEP)
KeyboardInterrupt
Traceback (most recent call last):
  File "C:\Users\strel\OneDrive\Desktop\Politehnica_Bucharest\1st year\Semester 2\Projet NLP\TAP\language_models.py", line 225, in generate
    response = openai.ChatCompletion.create(
  File "C:\Users\strel\anaconda3\lib\site-packages\openai\api_resources\chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
  File "C:\Users\strel\anaconda3\lib\site-packages\openai\api_resources\abstract\engine_api_resource.py", line 149, in create
    ) = cls.__prepare_create_request(
  File "C:\Users\strel\anaconda3\lib\site-packages\openai\api_resources\abstract\engine_api_resource.py", line 106, in __prepare_create_request
    requestor = api_requestor.APIRequestor(
  File "C:\Users\strel\anaconda3\lib\site-packages\openai\api_requestor.py", line 138, in __init__
    self.api_key = key or util.default_api_key()
  File "C:\Users\strel\anaconda3\lib\site-packages\openai\util.py", line 186, in default_api_key
    raise openai.error.AuthenticationError(
openai.error.AuthenticationError: No API key provided. You can set your API key in code using 'openai.api_key = <API-KEY>', or you can set the environment variable OPENAI_API_KEY=<API-KEY>). If your API key is stored in a file, you can point the openai module at it with 'openai.api_key_path = <PATH>'. You can generate API keys in the OpenAI web interface. See https://platform.openai.com/account/api-keys for details.
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
  File "C:\Users\strel\OneDrive\Desktop\Politehnica_Bucharest\1st year\Semester 2\Projet NLP\TAP\main_TAP.py", line 412, in <module>
    main(args)
  File "C:\Users\strel\OneDrive\Desktop\Politehnica_Bucharest\1st year\Semester 2\Projet NLP\TAP\main_TAP.py", line 147, in main
    attack_llm.get_attack(convs_list_copy, processed_response_list)
  File "C:\Users\strel\OneDrive\Desktop\Politehnica_Bucharest\1st year\Semester 2\Projet NLP\TAP\conversers.py", line 114, in get_attack
    self.model.batched_generate(full_prompts_subset[left:right],
  File "C:\Users\strel\OneDrive\Desktop\Politehnica_Bucharest\1st year\Semester 2\Projet NLP\TAP\language_models.py", line 247, in batched_generate
    return [self.generate(conv, max_n_tokens, temperature, top_p) for conv in convs_list]
  File "C:\Users\strel\OneDrive\Desktop\Politehnica_Bucharest\1st year\Semester 2\Projet NLP\TAP\language_models.py", line 247, in <listcomp>
    return [self.generate(conv, max_n_tokens, temperature, top_p) for conv in convs_list]
  File "C:\Users\strel\OneDrive\Desktop\Politehnica_Bucharest\1st year\Semester 2\Projet NLP\TAP\language_models.py", line 237, in generate
    time.sleep(self.API_RETRY_SLEEP)
KeyboardInterrupt